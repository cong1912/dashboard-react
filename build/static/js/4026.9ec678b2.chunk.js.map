{"version":3,"file":"static/js/4026.9ec678b2.chunk.js","mappings":"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","sources":["components/EditSectionForm/index.tsx","components/QuillInput/index.tsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Theme, Button, CircularProgress } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Box } from '@mui/system';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\nimport QuillInput from '../QuillInput';\r\n\r\n//context\r\nimport { ERROR_ACTION } from 'src/reduces/ErrorsReducer';\r\nimport { AppContext } from 'src/AppProvider';\r\nimport { AppContextType } from 'src/interfaces/AppContextType';\r\nimport { SUCCESS_ACTION } from 'src/reduces/SuccessReducer';\r\nimport { updateSection } from 'src/services/SessionService';\r\nimport useSWR, { mutate } from 'swr';\r\nimport { SECTION_URL } from 'src/constants/url';\r\nimport { ISection } from 'src/content/applications/Sections';\r\nimport { getData } from 'src/helpers/apiHandle';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '90%',\r\n      margin: theme.spacing(1)\r\n    },\r\n    '& .MuiDialogContent-root': {\r\n      height: 400\r\n    },\r\n    '& .MuiBox-root': {\r\n      width: '90%',\r\n      margin: theme.spacing(1)\r\n    },\r\n    '& .quill': {\r\n      height: 180\r\n    }\r\n  },\r\n  btn: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst EditSessionForm = ({ open, setIsOpenUpdateModal, id, newId }) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n  const [requesting, setRequesting] = useState(false);\r\n\r\n  // context\r\n  const appContext = useContext(AppContext) as AppContextType;\r\n  const { errorsReducer, successReducer } = appContext;\r\n  const [errors, errorDispatch] = errorsReducer;\r\n  const [success, successDispatch] = successReducer;\r\n\r\n  //fetch data\r\n  const { data: section } = useSWR<ISection>(\r\n    id ? SECTION_URL + id : null,\r\n    getData\r\n  );\r\n  useEffect(() => {\r\n    if (!id || !section) {\r\n      return;\r\n    } else {\r\n      setTitle(section.title);\r\n      setSummary(section.summary);\r\n    }\r\n  }, [section, id]);\r\n\r\n  const handleClose = () => {\r\n    setIsOpenUpdateModal(false);\r\n  };\r\n\r\n  const handleEditSection = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = {\r\n        title: title,\r\n        summary: summary,\r\n        newsId: +newId\r\n      };\r\n\r\n      await updateSection(data, id);\r\n      successDispatch({\r\n        type: SUCCESS_ACTION.SET_SUCCESS,\r\n        success: 'Create Section Success'\r\n      });\r\n      await mutate(SECTION_URL);\r\n      await mutate(SECTION_URL + `?newsId=${newId}`);\r\n      setIsOpenUpdateModal(false);\r\n    } catch (error) {\r\n      errorDispatch({\r\n        type: ERROR_ACTION.SET_ERROR,\r\n        error: error.response.data.message\r\n      });\r\n      setRequesting(false);\r\n    }\r\n  };\r\n\r\n  if (!section) return <CircularProgress />;\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"sm\">\r\n      <DialogTitle>Create New Session</DialogTitle>\r\n      <form className={classes.root} onSubmit={handleEditSection}>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Title\"\r\n            name=\"title\"\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n            value={title}\r\n          />\r\n          <Box>\r\n            <QuillInput content={summary} handleChangeContent={setSummary} />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            className={classes.label}\r\n            disabled={requesting}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditSessionForm;\r\n","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst QuillInput = ({ content, handleChangeContent }) => {\r\n  const modules = {\r\n    toolbar: [\r\n      [{ font: [] }],\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ script: 'sub' }, { script: 'super' }],\r\n      ['blockquote', 'code-block'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n      [{ indent: '-1' }, { indent: '+1' }, { align: [] }],\r\n      ['link', 'image', 'video'],\r\n      ['clean']\r\n    ]\r\n  };\r\n  return (\r\n    <ReactQuill\r\n      modules={modules}\r\n      theme=\"snow\"\r\n      value={content}\r\n      onChange={handleChangeContent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(QuillInput);\r\n"],"names":["useStyles","makeStyles","theme","root","width","margin","spacing","height","btn","label","textTransform","open","setIsOpenUpdateModal","id","newId","classes","useState","title","setTitle","summary","setSummary","requesting","setRequesting","appContext","useContext","AppContext","errorsReducer","successReducer","errorDispatch","successDispatch","section","useSWR","SECTION_URL","getData","data","useEffect","handleClose","handleEditSection","event","preventDefault","newsId","updateSection","type","SUCCESS_ACTION","success","mutate","ERROR_ACTION","error","response","message","onClose","maxWidth","className","onSubmit","variant","name","onChange","e","target","value","content","handleChangeContent","color","size","disabled","onClick","QuillInput","modules","toolbar","font","header","background","script","list","indent","align","React"],"sourceRoot":""}