{"version":3,"file":"static/js/5723.213bd0b5.chunk.js","mappings":"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","sources":["components/DeleteDialog/index.tsx","components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","constants/url.ts","content/applications/Blog/PageHeader.tsx","components/ActiveTable/index.tsx","content/applications/Blog/BlogTable.tsx","content/applications/Blog/index.tsx","helpers/apiHandle.ts","services/BlogService.ts"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport { DeleteDialogType } from 'src/interfaces/DeleteDiaglogType';\r\n\r\nconst DeleteDialog = ({\r\n  open,\r\n  name,\r\n  handleClose,\r\n  handleDelete\r\n}: DeleteDialogType) => {\r\n  return (\r\n    <Dialog\r\n      data-testid=\"dialogDelete\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n        Delete {name}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Do you want to delete this {name}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleDelete} data-testid=\"btnDelete\">\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DeleteDialog);\r\n","import { Box, Container, Link, Typography, styled } from '@mui/material';\r\n\r\nconst FooterWrapper = styled(Container)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(4)};\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper className=\"footer-wrapper\">\r\n      <Box\r\n        pb={4}\r\n        display={{ xs: 'block', md: 'flex' }}\r\n        alignItems=\"center\"\r\n        textAlign={{ xs: 'center', md: 'left' }}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Box>\r\n          <Typography variant=\"subtitle1\">\r\n            &copy; 2022 - Tokyo Free White React Typescript Admin Dashboard\r\n          </Typography>\r\n        </Box>\r\n        <Typography\r\n          sx={{\r\n            pt: { xs: 2, md: 0 }\r\n          }}\r\n          variant=\"subtitle1\"\r\n        >\r\n          Crafted by{' '}\r\n          <Link\r\n            href=\"https://bloomui.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            BloomUI.com\r\n          </Link>\r\n        </Typography>\r\n      </Box>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","const NEWS_URL = `${process.env.REACT_APP_API_END_POINT}/news/articles/`;\r\nconst CATEGORIES_URL = `${process.env.REACT_APP_API_END_POINT}/categories`;\r\nconst ARTICLE_CATEGORY = `${process.env.REACT_APP_API_END_POINT}/article_category`;\r\nconst COURSE_URL = `${process.env.REACT_APP_API_END_POINT}/courses/`;\r\nconst SECTION_URL = `${process.env.REACT_APP_API_END_POINT}/section/`;\r\nconst LECTURE_URL = `${process.env.REACT_APP_API_END_POINT}/post/`;\r\n\r\nexport {\r\n  NEWS_URL,\r\n  CATEGORIES_URL,\r\n  ARTICLE_CATEGORY,\r\n  COURSE_URL,\r\n  SECTION_URL,\r\n  LECTURE_URL\r\n};\r\n","import { Typography, Button, Grid } from '@mui/material';\r\n\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\n\r\nfunction PageHeader({ handleClickOpenDialog }) {\r\n  const user = {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg'\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Transactions\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n          {user.name}, manage your blogs\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          sx={{ mt: { xs: 2, md: 0 } }}\r\n          variant=\"contained\"\r\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\r\n          onClick={handleClickOpenDialog}\r\n        >\r\n          Create new Blog\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport { deleteBlog } from 'src/services/BlogService';\r\nimport { NEWS_URL } from 'src/constants/url';\r\nimport { mutate } from 'swr';\r\nimport { useState, lazy } from 'react';\r\nimport DeleteDialog from '../DeleteDialog';\r\n\r\nconst EditBlogForm = lazy(() => import('src/components/EditBlogForm'));\r\n\r\nconst ActiveTable = ({ params, rowId, setRowId }) => {\r\n  const [isOpenUpdateModal, setIsOpenUpdateModal] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [id, setId] = useState<number>();\r\n\r\n  const handleOpenUpdateModal = () => {\r\n    setIsOpenUpdateModal(true);\r\n    setId(params.id);\r\n  };\r\n\r\n  const handelDeleteBlog = async (params) => {\r\n    await deleteBlog(params.id);\r\n    await mutate(NEWS_URL);\r\n  };\r\n  const handleCloseDeleteDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n  const handleDeleteBlog = () => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Tooltip title=\"Edit this room\">\r\n          <IconButton onClick={handleOpenUpdateModal}>\r\n            <Edit />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete this room\">\r\n          <IconButton onClick={() => handelDeleteBlog(params)}>\r\n            <Delete />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <EditBlogForm\r\n        id={id}\r\n        open={isOpenUpdateModal}\r\n        setIsOpenUpdateModal={setIsOpenUpdateModal}\r\n      />\r\n      <DeleteDialog\r\n        open={openDeleteDialog}\r\n        name=\"blog\"\r\n        handleClose={handleCloseDeleteDialog}\r\n        handleDelete={handleDeleteBlog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActiveTable;\r\n","import React, { useMemo, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\r\nimport { grey } from '@mui/material/colors';\r\nimport ActiveTable from 'src/components/ActiveTable';\r\n\r\nconst BlogTable = ({ blogs }) => {\r\n  const [pageSize, setPageSize] = useState(20);\r\n  const [rowId, setRowId] = useState(null);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      { field: 'id', headerName: 'Id', width: 220 },\r\n      { field: 'title', headerName: 'Title', width: 170 },\r\n      { field: 'summary', headerName: 'Summary', width: 200 },\r\n      {\r\n        field: 'image',\r\n        headerName: 'Image',\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          const newImage = params.row.image.slice(7, params.value.length);\r\n\r\n          return (\r\n            <img\r\n              crossOrigin=\"anonymous\"\r\n              src={process.env.REACT_APP_API_BACK_END + newImage}\r\n              loading=\"lazy\"\r\n              width=\"30%\"\r\n            />\r\n          );\r\n        },\r\n        sortable: false,\r\n        filterable: false\r\n      },\r\n      { field: 'viewed', headerName: 'Viewed', width: 200 },\r\n      { field: 'shared', headerName: 'Shared', width: 200 },\r\n      {\r\n        field: 'status',\r\n        headerName: 'status',\r\n        width: 100,\r\n        type: 'boolean',\r\n        editable: true\r\n      },\r\n\r\n      {\r\n        field: 'actions',\r\n        headerName: 'Actions',\r\n        type: 'actions',\r\n        renderCell: (params) => <ActiveTable {...{ params, rowId, setRowId }} />\r\n      }\r\n    ],\r\n    [rowId]\r\n  );\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 600,\r\n        width: '100%',\r\n        pb: 5\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h3\"\r\n        component=\"h3\"\r\n        sx={{ textAlign: 'center', mt: 3, mb: 3 }}\r\n      >\r\n        Manage Blogs\r\n      </Typography>\r\n      <DataGrid\r\n        columns={columns}\r\n        rows={blogs.results}\r\n        getRowId={(row) => row.id}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        pageSize={pageSize}\r\n        onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n        getRowSpacing={(params) => ({\r\n          top: params.isFirstVisible ? 0 : 5,\r\n          bottom: params.isLastVisible ? 0 : 5\r\n        })}\r\n        sx={{\r\n          [`& .${gridClasses.row}`]: {\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === 'light' ? grey[200] : grey[900]\r\n          }\r\n        }}\r\n        onCellEditCommit={(params) => setRowId(params.id)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default BlogTable;\r\n","import { ChangeEvent, lazy, useContext, useEffect, useState } from 'react';\r\nimport useSWR, { mutate } from 'swr';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageHeader from './PageHeader';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport { Grid, Container } from '@mui/material';\r\nimport Footer from 'src/components/Footer';\r\nimport BlogTable from './BlogTable';\r\n\r\nimport { getData } from 'src/helpers/apiHandle';\r\nimport { ARTICLE_CATEGORY, NEWS_URL } from 'src/constants/url';\r\nimport { createBlog } from 'src/services/BlogService';\r\n\r\nimport { ERROR_ACTION } from 'src/reduces/ErrorsReducer';\r\nimport { AppContext } from 'src/AppProvider';\r\nimport { AppContextType } from 'src/interfaces/AppContextType';\r\nimport { SUCCESS_ACTION } from 'src/reduces/SuccessReducer';\r\nimport { ICategory } from 'src/components/EditBlogForm';\r\nimport { ICategories } from '../Courses';\r\n\r\nconst CreateBlogForm = lazy(() => import('src/components/CreateBlogForm'));\r\n\r\ninterface IBlog {\r\n  title: string;\r\n  summary: string;\r\n  avatar: string;\r\n}\r\ninterface IBlogs {\r\n  sizePage: number;\r\n  results: IBlog[];\r\n}\r\n\r\nfunction BlogManager() {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [category, setCategory] = useState<ICategory>();\r\n  const [image, setImage] = useState([]);\r\n  const [content, setContent] = useState('');\r\n  const [blog, setBlog] = useState({\r\n    title: '',\r\n    summary: ''\r\n  });\r\n  const [requesting, setRequesting] = useState<boolean>(false);\r\n  const appContext = useContext(AppContext) as AppContextType;\r\n  const { errorsReducer, successReducer } = appContext;\r\n  const [errors, errorDispatch] = errorsReducer;\r\n  const [success, successDispatch] = successReducer;\r\n  const handleChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setBlog({ ...blog, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const { data: article } = useSWR<IBlogs>(NEWS_URL, getData);\r\n  const { data: categories } = useSWR<ICategories>(ARTICLE_CATEGORY, getData);\r\n  \r\n  useEffect(() => {\r\n    if (!categories) return;\r\n\r\n    setCategory(categories?.results[0]);\r\n  }, [categories]);\r\n  const objectEmpty = {\r\n    pageSize: 1,\r\n    results: [{ id: 1, image: 'public/uploads/file-1665731987187.png' }]\r\n  };\r\n  const response = article || objectEmpty;\r\n\r\n  const objectEmptyCategories = {\r\n    value: {\r\n      results: [{ id: 4, name: 'Thông tin chứng khoán' }]\r\n    }\r\n  };\r\n  const resCategories = categories || objectEmptyCategories;\r\n\r\n  //dialog create\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n  const handleCreateBlog = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('file', image[0]);\r\n      formData.append('content', content);\r\n      formData.append('title', blog.title);\r\n      formData.append('summary', blog.summary);\r\n      formData.append('categoryId', category.id as unknown as string);\r\n\r\n      await createBlog(formData);\r\n      successDispatch({\r\n        type: SUCCESS_ACTION.SET_SUCCESS,\r\n        success: 'Create Blog Success'\r\n      });\r\n      await mutate(NEWS_URL);\r\n      setOpenDialog(false);\r\n      setContent('');\r\n      setBlog({\r\n        title: '',\r\n        summary: ''\r\n      });\r\n    } catch (error) {\r\n      errorDispatch({\r\n        type: ERROR_ACTION.SET_ERROR,\r\n        error: error.response.data.message\r\n      });\r\n      setRequesting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Blog - Manager</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader handleClickOpenDialog={handleClickOpenDialog} />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <BlogTable blogs={response} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n      <CreateBlogForm\r\n        blog={blog}\r\n        open={openDialog}\r\n        handleClose={handleCloseDialog}\r\n        handleChangeTitle={handleChangeValue}\r\n        handleChangeSummary={handleChangeValue}\r\n        handleChangeContent={setContent}\r\n        setImage={setImage}\r\n        requesting={requesting}\r\n        handleCreateBlog={handleCreateBlog}\r\n        categories={resCategories}\r\n        category={category}\r\n        setCategory={setCategory}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogManager;\r\n","import axios from 'axios';\r\n\r\n// Get data form server\r\nexport const getData = async <T>(url: string): Promise<T> => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n  const res = await axios.get<T>(url, { headers: { Authorization: token } });\r\n  return res.data;\r\n};\r\n\r\nexport const multiFetcher = async (...urlArr: string[]) =>\r\n  Promise.allSettled(urlArr.map((url) => getData(url)));\r\n","import axios from 'axios';\r\n\r\nexport const createBlog = (data) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'post',\r\n    url: '/news/articles',\r\n    data: data,\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateBlog = (data, id) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'put',\r\n    url: `/news/articles/${id}`,\r\n    data: data,\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteBlog = (id) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'delete',\r\n    url: `/news/articles/${id}`,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n"],"names":["DeleteDialog","open","name","handleClose","handleDelete","onClose","style","cursor","id","autoFocus","onClick","React","FooterWrapper","styled","Container","theme","spacing","className","pb","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","PageTitle","Box","children","maxWidth","NEWS_URL","process","ARTICLE_CATEGORY","COURSE_URL","SECTION_URL","LECTURE_URL","handleClickOpenDialog","Grid","container","item","Typography","component","gutterBottom","Button","mt","startIcon","AddTwoTone","fontSize","EditBlogForm","lazy","params","rowId","setRowId","useState","isOpenUpdateModal","setIsOpenUpdateModal","openDeleteDialog","setOpenDeleteDialog","setId","handelDeleteBlog","deleteBlog","mutate","Tooltip","title","IconButton","Edit","Delete","blogs","pageSize","setPageSize","columns","useMemo","field","headerName","width","renderCell","newImage","row","image","slice","value","length","crossOrigin","src","loading","sortable","filterable","type","editable","height","mb","DataGrid","rows","results","getRowId","rowsPerPageOptions","onPageSizeChange","newPageSize","getRowSpacing","top","isFirstVisible","bottom","isLastVisible","gridClasses","bgcolor","palette","mode","grey","onCellEditCommit","CreateBlogForm","openDialog","setOpenDialog","category","setCategory","setImage","content","setContent","summary","blog","setBlog","requesting","setRequesting","appContext","useContext","AppContext","errorsReducer","successReducer","errorDispatch","successDispatch","handleChangeValue","e","article","useSWR","getData","data","categories","useEffect","response","resCategories","handleCreateBlog","event","preventDefault","formData","FormData","append","createBlog","SUCCESS_ACTION","success","ERROR_ACTION","error","message","PageTitleWrapper","direction","Footer","handleChangeTitle","handleChangeSummary","handleChangeContent","url","token","JSON","parse","localStorage","getItem","axios","headers","Authorization","res","multiFetcher","urlArr","Promise","allSettled","map","method","updateBlog"],"sourceRoot":""}