{"version":3,"file":"static/js/154.60a62faa.chunk.js","mappings":"kXAsBMA,GAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAmB,CAC9CC,KAAM,CACJ,yBAA0B,CACxBC,MAAO,QAET,gBAAiB,CACfC,OAAQ,UAyGd,UApGuB,SAAC,GAejB,IAdLC,EAcI,EAdJA,KACAC,EAaI,EAbJA,KACAC,EAYI,EAZJA,YACAC,EAWI,EAXJA,kBACAC,EAUI,EAVJA,oBACAC,EASI,EATJA,oBACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,iBACAC,EAMI,EANJA,WACAC,EAKI,EALJA,WACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,UACAC,EACI,EADJA,aAEMC,EAAUpB,IAMhB,OAAKe,GAEH,UAAC,IAAD,CAAQT,KAAMA,EAAMe,QAASb,EAAac,SAAS,KAAnD,WACE,SAAC,IAAD,8CACA,kBAAMC,UAAWH,EAAQjB,KAAMqB,SAAUX,EAAzC,WACE,SAAC,IAAD,WACE,UAAC,KAAD,CAAMY,WAAS,EAACC,QAAS,EAAzB,WACE,SAAC,KAAD,CAAMC,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,QAAQ,WACRC,MAAM,QACNC,KAAK,QACLC,SAAUvB,EACVwB,MAAO1B,EAAK2B,WAGhB,SAAC,KAAD,CAAMP,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEC,QAAQ,WACRC,MAAM,cACNC,KAAK,UACLC,SAAUtB,EACVuB,MAAO1B,EAAK4B,aAGhB,SAAC,KAAD,CAAMR,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEQ,eAAa,EACbC,GAAG,iBACHC,QAASvB,EAAWwB,QACpBP,SAAU,SAACQ,EAAOP,GAAR,OAAkBhB,EAAYgB,IACxCA,MAAOjB,EACPyB,eAAgB,SAACC,GAAD,OAA8BA,EAAOX,MACrDY,YAAa,SAACC,GACZ,OAAO,SAAC,KAAD,kBAAeA,GAAf,IAAuBd,MAAM,oBAI1C,SAAC,KAAD,CAAMH,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CAASjB,oBAAqBA,EAAqBkC,QAAQ,QAE7D,UAAC,KAAD,CAAMlB,MAAI,EAACC,GAAI,GAAf,WACE,SAAC,IAAD,qBACA,SAAC,KAAD,CACEI,SAhDO,SAACc,GACpBlC,EAASkC,IAgDGC,cAAe,CAAC,aAAc,YAAa,aAC3CC,YAAa,IACbC,WAAY,QAGhB,SAAC,KAAD,CAAMtB,MAAI,EAACC,GAAI,GAAf,UACE,SAAC,IAAD,CACEsB,SAAS,SAAC,IAAD,CAAUC,QAASjC,IAC5Bc,SAAU,SAACoB,GACTjC,GAAcD,IAEhBmC,eAAe,QACfvB,MAAM,mCAKd,UAAC,IAAD,YACE,SAAC,IAAD,CACEwB,MAAM,UACNC,KAAK,QACLC,KAAK,SACLC,SAAU3C,EAJZ,qBAQA,SAAC,IAAD,CAAQ4C,QAASlD,EAAjB,8BAvEgB,SAAC,IAAD,M,2DCrB1B,IA/BgB,SAAC,GAAsC,IAApCG,EAAmC,EAAnCA,oBAAqBkC,EAAc,EAAdA,QAChCc,GAAYC,EAAAA,EAAAA,QAAO,MAMzB,OACE,+BACE,SAAC,IAAD,CACEC,OAAO,mDACPC,OAAQ,SAACC,EAAKC,GAAN,OAAkBL,EAAUM,QAAUD,GAC9CE,aAAcrB,EACdsB,KAAM,CACJ9D,OAAQ,IACR+D,QACE,4bACFC,QACE,0JAIFC,cACE,mEAEJtC,SAtBW,SAACoB,GAChBzC,EAAoByC,EAAEmB,OAAOC","sources":["components/CreateArticleForm/index.tsx","components/Timymce/index.tsx"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Theme,\r\n  Button,\r\n  FormLabel,\r\n  Autocomplete\r\n} from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport {\r\n  Checkbox,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport CircularProgress from '@mui/material/CircularProgress/CircularProgress';\r\nimport Timymce from '../Timymce';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '100%'\r\n    },\r\n    '& .ck-content': {\r\n      height: 250\r\n    }\r\n  }\r\n}));\r\n\r\nconst CreateBlogForm = ({\r\n  open,\r\n  blog,\r\n  handleClose,\r\n  handleChangeTitle,\r\n  handleChangeSummary,\r\n  handleChangeContent,\r\n  setImage,\r\n  handleCreateBlog,\r\n  requesting,\r\n  categories,\r\n  category,\r\n  setCategory,\r\n  highlight,\r\n  setHighlight\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (files) => {\r\n    setImage(files);\r\n  };\r\n\r\n  if (!categories) return <CircularProgress />;\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"xl\">\r\n      <DialogTitle>Tạo tin tức mới</DialogTitle>\r\n      <form className={classes.root} onSubmit={handleCreateBlog}>\r\n        <DialogContent>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Title\"\r\n                name=\"title\"\r\n                onChange={handleChangeTitle}\r\n                value={blog.title}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Description\"\r\n                name=\"summary\"\r\n                onChange={handleChangeSummary}\r\n                value={blog.summary}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Autocomplete\r\n                disablePortal\r\n                id=\"combo-box-demo\"\r\n                options={categories.results}\r\n                onChange={(event, value) => setCategory(value)}\r\n                value={category}\r\n                getOptionLabel={(option: { name: string }) => option.name}\r\n                renderInput={(params) => {\r\n                  return <TextField {...params} label=\"Category\" />;\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Timymce handleChangeContent={handleChangeContent} content=\"\" />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormLabel>Thumb</FormLabel>\r\n              <DropzoneArea\r\n                onChange={handleChange}\r\n                acceptedFiles={['image/jpeg', 'image/png', 'image/bmp']}\r\n                maxFileSize={5000000}\r\n                filesLimit={1}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox checked={highlight} />}\r\n                onChange={(e) => {\r\n                  setHighlight(!highlight);\r\n                }}\r\n                labelPlacement=\"start\"\r\n                label=\"Tin nổi bật:\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            disabled={requesting}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateBlogForm;\r\n","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nconst Timymce = ({ handleChangeContent, content }) => {\r\n  const editorRef = useRef(null);\r\n\r\n  const onChange = (e) => {\r\n    handleChangeContent(e.target.getContent());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        apiKey=\"4wvwhb18asy172qnsxv6g879f5er5mcoowyg3gygvys2lm9x\"\r\n        onInit={(evt, editor) => (editorRef.current = editor)}\r\n        initialValue={content}\r\n        init={{\r\n          height: 500,\r\n          plugins:\r\n            'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter pageembed charmap mentions quickbars linkchecker emoticons advtable',\r\n          toolbar:\r\n            'undo redo | formatselect | ' +\r\n            'bold italic backcolor | alignleft aligncenter ' +\r\n            'alignright alignjustify | bullist numlist outdent indent | ' +\r\n            'removeformat | help',\r\n          content_style:\r\n            'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n        }}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timymce;\r\n"],"names":["useStyles","makeStyles","theme","root","width","height","open","blog","handleClose","handleChangeTitle","handleChangeSummary","handleChangeContent","setImage","handleCreateBlog","requesting","categories","category","setCategory","highlight","setHighlight","classes","onClose","maxWidth","className","onSubmit","container","spacing","item","xs","variant","label","name","onChange","value","title","summary","disablePortal","id","options","results","event","getOptionLabel","option","renderInput","params","content","files","acceptedFiles","maxFileSize","filesLimit","control","checked","e","labelPlacement","color","size","type","disabled","onClick","editorRef","useRef","apiKey","onInit","evt","editor","current","initialValue","init","plugins","toolbar","content_style","target","getContent"],"sourceRoot":""}