{"version":3,"file":"static/js/4441.10bcac29.chunk.js","mappings":"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","sources":["components/EditLectureForm/index.tsx","components/QuillInput/index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Grid, TextField, Theme, Button } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Box } from '@mui/system';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\nimport QuillInput from '../QuillInput';\r\nimport { updateLecture } from 'src/services/LecturesService';\r\n\r\n//context\r\nimport { ERROR_ACTION } from 'src/reduces/ErrorsReducer';\r\nimport { AppContext } from 'src/AppProvider';\r\nimport { AppContextType } from 'src/interfaces/AppContextType';\r\nimport { SUCCESS_ACTION } from 'src/reduces/SuccessReducer';\r\nimport { LECTURE_URL } from 'src/constants/url';\r\nimport useSWR, { mutate } from 'swr';\r\nimport { getData } from 'src/helpers/apiHandle';\r\nimport { ILecture } from 'src/content/applications/Lectures';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '90%',\r\n      margin: theme.spacing(1)\r\n    },\r\n    '& .MuiDialogContent-root': {\r\n      height: 420\r\n    },\r\n    '& .MuiBox-root': {\r\n      width: '90%',\r\n      margin: theme.spacing(1)\r\n    },\r\n    '& .quill': {\r\n      height: 180\r\n    }\r\n  },\r\n  btn: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst CreateLectureForm = ({ open, setIsOpenUpdateModal, id, sectionId }) => {\r\n  const classes = useStyles();\r\n  const [requesting, setRequesting] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  // context\r\n  const appContext = useContext(AppContext) as AppContextType;\r\n  const { errorsReducer, successReducer } = appContext;\r\n  const [errors, errorDispatch] = errorsReducer;\r\n  const [success, successDispatch] = successReducer;\r\n\r\n  //fetch data\r\n  const { data: lecture } = useSWR<ILecture>(\r\n    id ? LECTURE_URL + id : null,\r\n    getData\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!id || !lecture) {\r\n      return;\r\n    } else {\r\n      setContent(lecture.content);\r\n      setName(lecture.name);\r\n      setPrice(lecture.price);\r\n    }\r\n  }, [lecture, id]);\r\n\r\n  const handleEditLecture = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = {\r\n        name: name,\r\n        content: content,\r\n        sectionId: +sectionId,\r\n        price: +price\r\n      };\r\n\r\n      await updateLecture(data, id);\r\n      successDispatch({\r\n        type: SUCCESS_ACTION.SET_SUCCESS,\r\n        success: 'Create Lecture Success'\r\n      });\r\n      await mutate(LECTURE_URL + `?sectionId=${sectionId}`);\r\n      setIsOpenUpdateModal(false);\r\n    } catch (error) {\r\n      errorDispatch({\r\n        type: ERROR_ACTION.SET_ERROR,\r\n        error: error.response.data.message\r\n      });\r\n      setRequesting(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpenUpdateModal(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"sm\">\r\n      <DialogTitle>Create New Session</DialogTitle>\r\n      <form className={classes.root} onSubmit={handleEditLecture}>\r\n        <DialogContent>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"name\"\r\n            name=\"name\"\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n            value={name}\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            label=\"Price\"\r\n            name=\"price\"\r\n            type=\"number\"\r\n            onChange={(e) => {\r\n              setPrice(e.target.value);\r\n            }}\r\n            value={price}\r\n          />\r\n          <Box>\r\n            <QuillInput content={content} handleChangeContent={setContent} />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            className={classes.label}\r\n            disabled={requesting}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateLectureForm;\r\n","import React from 'react';\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css';\r\n\r\nconst QuillInput = ({ content, handleChangeContent }) => {\r\n  const modules = {\r\n    toolbar: [\r\n      [{ font: [] }],\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n      ['bold', 'italic', 'underline', 'strike'],\r\n      [{ color: [] }, { background: [] }],\r\n      [{ script: 'sub' }, { script: 'super' }],\r\n      ['blockquote', 'code-block'],\r\n      [{ list: 'ordered' }, { list: 'bullet' }],\r\n      [{ indent: '-1' }, { indent: '+1' }, { align: [] }],\r\n      ['link', 'image', 'video'],\r\n      ['clean']\r\n    ]\r\n  };\r\n  return (\r\n    <ReactQuill\r\n      modules={modules}\r\n      theme=\"snow\"\r\n      value={content}\r\n      onChange={handleChangeContent}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(QuillInput);\r\n"],"names":["useStyles","makeStyles","theme","root","width","margin","spacing","height","btn","label","textTransform","open","setIsOpenUpdateModal","id","sectionId","classes","useState","requesting","setRequesting","name","setName","price","setPrice","content","setContent","appContext","useContext","AppContext","errorsReducer","successReducer","errorDispatch","successDispatch","lecture","useSWR","LECTURE_URL","getData","data","useEffect","handleEditLecture","event","preventDefault","updateLecture","type","SUCCESS_ACTION","success","mutate","ERROR_ACTION","error","response","message","handleClose","onClose","maxWidth","className","onSubmit","variant","onChange","e","target","value","handleChangeContent","color","size","disabled","onClick","QuillInput","modules","toolbar","font","header","background","script","list","indent","align","React"],"sourceRoot":""}