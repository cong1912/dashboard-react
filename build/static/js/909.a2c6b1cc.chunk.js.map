{"version":3,"file":"static/js/909.a2c6b1cc.chunk.js","mappings":"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","sources":["components/CategoryForm/index.tsx","components/EditCategoryForm/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Grid, TextField, Theme, Button } from '@mui/material';\r\nimport { DialogActions, DialogContent } from '@material-ui/core';\r\nimport { makeStyles } from '@mui/styles';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst CategoryForm = ({\r\n  handleSubmitForm,\r\n  name,\r\n  setName,\r\n  description,\r\n  setDescription,\r\n  requesting,\r\n  handleClose\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <form className={classes.root} onSubmit={handleSubmitForm}>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                onChange={(e) => setName(e.target.value)}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                label=\"Description\"\r\n                multiline\r\n                rows={5}\r\n                name=\"description\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            disabled={requesting}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Theme } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport { Box } from '@mui/system';\r\nimport { Dialog, DialogTitle } from '@material-ui/core';\r\n\r\n//context\r\nimport { ERROR_ACTION } from 'src/reduces/ErrorsReducer';\r\nimport { AppContext } from 'src/AppProvider';\r\nimport { AppContextType } from 'src/interfaces/AppContextType';\r\nimport { SUCCESS_ACTION } from 'src/reduces/SuccessReducer';\r\nimport { CATEGORIES_URL } from 'src/constants/url';\r\nimport useSWR, { mutate } from 'swr';\r\nimport { getData } from 'src/helpers/apiHandle';\r\nimport CategoryForm from '../CategoryForm';\r\nimport { ICategory } from 'src/content/applications/CategoriesCourse';\r\nimport { updateCategory } from 'src/services/CategoryService';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '90%',\r\n      margin: theme.spacing(1)\r\n    },\r\n    '& .MuiDialogContent-root': {\r\n      height: 420\r\n    },\r\n    '& .MuiBox-root': {\r\n      width: '90%',\r\n      margin: theme.spacing(1)\r\n    },\r\n    '& .quill': {\r\n      height: 180\r\n    }\r\n  },\r\n  btn: {\r\n    margin: theme.spacing(0.5)\r\n  },\r\n  label: {\r\n    textTransform: 'none',\r\n    margin: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nconst EditCategoryForm = ({ open, setIsOpenUpdateModal, id, sectionId }) => {\r\n  const classes = useStyles();\r\n  const [requesting, setRequesting] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // context\r\n  const appContext = useContext(AppContext) as AppContextType;\r\n  const { errorsReducer, successReducer } = appContext;\r\n  const [errors, errorDispatch] = errorsReducer;\r\n  const [success, successDispatch] = successReducer;\r\n\r\n  //fetch data\r\n  const { data: category } = useSWR<ICategory>(\r\n    id ? CATEGORIES_URL + id : null,\r\n    getData\r\n  );\r\n  console.log('data', category);\r\n\r\n  useEffect(() => {\r\n    if (!id || !category) {\r\n      return;\r\n    } else {\r\n      setName(category.name);\r\n      setDescription(category.description);\r\n    }\r\n  }, [category, id]);\r\n\r\n  const handleEditCategory = async (\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = {\r\n        name: name,\r\n        description: description\r\n      };\r\n\r\n      await updateCategory(data, id);\r\n      successDispatch({\r\n        type: SUCCESS_ACTION.SET_SUCCESS,\r\n        success: 'Create Lecture Success'\r\n      });\r\n      await mutate(CATEGORIES_URL + id);\r\n      await mutate(CATEGORIES_URL);\r\n      setIsOpenUpdateModal(false);\r\n    } catch (error) {\r\n      errorDispatch({\r\n        type: ERROR_ACTION.SET_ERROR,\r\n        error: error.response.data.message\r\n      });\r\n      setRequesting(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpenUpdateModal(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"sm\">\r\n      <DialogTitle>Chỉnh sửa danh mục</DialogTitle>\r\n      <CategoryForm\r\n        handleSubmitForm={handleEditCategory}\r\n        handleClose={handleClose}\r\n        name={name}\r\n        setName={setName}\r\n        description={description}\r\n        setDescription={setDescription}\r\n        requesting={requesting}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditCategoryForm;\r\n"],"names":["useStyles","makeStyles","theme","root","width","handleSubmitForm","name","setName","description","setDescription","requesting","handleClose","classes","className","onSubmit","container","spacing","item","xs","variant","label","onChange","e","target","value","multiline","rows","color","size","type","disabled","onClick","margin","height","btn","textTransform","open","setIsOpenUpdateModal","id","sectionId","useState","setRequesting","appContext","useContext","AppContext","errorsReducer","successReducer","errorDispatch","successDispatch","category","useSWR","CATEGORIES_URL","getData","data","console","log","useEffect","handleEditCategory","event","preventDefault","updateCategory","SUCCESS_ACTION","success","mutate","ERROR_ACTION","error","response","message","onClose","maxWidth"],"sourceRoot":""}