{"version":3,"file":"static/js/6177.d065b4a8.chunk.js","mappings":"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","sources":["content/pages/Components/LoginForm/index.tsx","content/authentication/index.tsx","services/AuthService.ts"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  Grid,\r\n  Link,\r\n  TextField\r\n} from '@mui/material';\r\n\r\nconst LoginForm = ({ requesting, formik }) => {\r\n  return (\r\n    <Box component=\"form\" onSubmit={formik.handleSubmit} sx={{ mt: 1 }}>\r\n      <TextField\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        id=\"email\"\r\n        label=\"Email Address\"\r\n        name=\"email\"\r\n        autoComplete=\"email\"\r\n        autoFocus\r\n        value={formik.values.email}\r\n        onChange={formik.handleChange}\r\n        error={formik.touched.email && Boolean(formik.errors.email)}\r\n        helperText={formik.touched.email && formik.errors.email}\r\n      />\r\n      <TextField\r\n        margin=\"normal\"\r\n        required\r\n        fullWidth\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        type=\"password\"\r\n        id=\"password\"\r\n        autoComplete=\"current-password\"\r\n        value={formik.values.password}\r\n        onChange={formik.handleChange}\r\n        error={formik.touched.password && Boolean(formik.errors.password)}\r\n        helperText={formik.touched.password && formik.errors.password}\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n        label=\"Remember me\"\r\n      />\r\n      <Button\r\n        type=\"submit\"\r\n        fullWidth\r\n        variant=\"contained\"\r\n        disabled={requesting}\r\n        sx={{ mt: 3, mb: 2 }}\r\n      >\r\n        Sign In\r\n      </Button>\r\n      <Grid container>\r\n        <Grid item xs>\r\n          <Link href=\"#\" variant=\"body2\">\r\n            Forgot password?\r\n          </Link>\r\n        </Grid>\r\n        <Grid item>\r\n          <Link href=\"#\" variant=\"body2\">\r\n            {\"Don't have an account? Sign Up\"}\r\n          </Link>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useState, useContext } from 'react';\r\nimport LoginForm from '../pages/Components/LoginForm';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { Avatar, CssBaseline, Grid, Link, Typography } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport Paper from '@mui/material/Paper';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport { login } from 'src/services/AuthService';\r\nimport { NavigateFunction, useNavigate } from 'react-router';\r\nimport { ERROR_ACTION } from 'src/reduces/ErrorsReducer';\r\nimport { AppContext } from 'src/AppProvider';\r\nimport { AppContextType } from 'src/interfaces/AppContextType';\r\nimport { UserSession } from 'src/interfaces/User';\r\nimport * as yup from 'yup';\r\nconst theme = createTheme();\r\nimport { useFormik } from 'formik';\r\n\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string()\r\n    .email('Enter a valid email')\r\n    .required('Email is required'),\r\n  password: yup\r\n    .string()\r\n    .min(8, 'Password should be of minimum 8 characters length')\r\n    .required('Password is required')\r\n});\r\n\r\nconst index = () => {\r\n  let navigate: NavigateFunction = useNavigate();\r\n  const [requesting, setRequesting] = useState<boolean>(false);\r\n  const appContext = useContext(AppContext) as AppContextType;\r\n  const { errorsReducer } = appContext;\r\n  const [errors, errorDispatch] = errorsReducer;\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values, { resetForm }) => {\r\n      setRequesting(true);\r\n\r\n      try {\r\n        const response: { data: UserSession } = await login(values);\r\n        localStorage.setItem('token', JSON.stringify(response.data.token));\r\n        navigate('/dashboards/crypto');\r\n        resetForm();\r\n      } catch (error) {\r\n        errorDispatch({\r\n          type: ERROR_ACTION.SET_ERROR,\r\n          error: error.response.data.message\r\n        });\r\n\r\n        setRequesting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Grid container component=\"main\" sx={{ height: '100vh' }}>\r\n        <CssBaseline />\r\n        <Grid\r\n          item\r\n          xs={false}\r\n          sm={4}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: 'url(https://source.unsplash.com/random)',\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundColor: (t) =>\r\n              t.palette.mode === 'light'\r\n                ? t.palette.grey[50]\r\n                : t.palette.grey[900],\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center'\r\n          }}\r\n        />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <Box\r\n            sx={{\r\n              my: 8,\r\n              mx: 4,\r\n              display: 'flex',\r\n              flexDirection: 'column',\r\n              alignItems: 'center'\r\n            }}\r\n          >\r\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign in\r\n            </Typography>\r\n            <LoginForm requesting={requesting} formik={formik} />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import axios from 'axios';\r\nimport { UserInput } from 'src/interfaces/User';\r\n\r\nexport const login = (data: UserInput) => {\r\n  return axios.post('auth/login', data);\r\n};\r\n"],"names":["requesting","formik","Box","component","onSubmit","handleSubmit","sx","mt","TextField","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","value","values","email","onChange","handleChange","error","touched","Boolean","errors","helperText","type","password","FormControlLabel","control","Checkbox","color","Button","variant","disabled","mb","Grid","container","item","xs","Link","href","theme","createTheme","validationSchema","yup","min","navigate","useNavigate","useState","setRequesting","errorsReducer","useContext","AppContext","errorDispatch","useFormik","initialValues","resetForm","data","axios","response","localStorage","setItem","JSON","stringify","token","ERROR_ACTION","message","ThemeProvider","height","CssBaseline","sm","md","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography"],"sourceRoot":""}