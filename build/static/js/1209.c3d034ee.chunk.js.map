{"version":3,"file":"static/js/1209.c3d034ee.chunk.js","mappings":"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","sources":["components/DeleteDialog/index.tsx","components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","constants/url.ts","content/applications/Sections/PageHeader.tsx","components/ActionSectionTable/index.tsx","content/applications/Sections/SectionsTable.tsx","content/applications/Sections/index.tsx","helpers/apiHandle.ts","services/BlogService.ts","services/SessionService.ts","../node_modules/@mui/icons-material/esm/Preview.js"],"sourcesContent":["import React from 'react';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle\r\n} from '@mui/material';\r\nimport { DeleteDialogType } from 'src/interfaces/DeleteDiaglogType';\r\n\r\nconst DeleteDialog = ({\r\n  open,\r\n  name,\r\n  handleClose,\r\n  handleDelete\r\n}: DeleteDialogType) => {\r\n  return (\r\n    <Dialog\r\n      data-testid=\"dialogDelete\"\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n        Delete {name}\r\n      </DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>Do you want to delete this {name}</DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleClose}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleDelete} data-testid=\"btnDelete\">\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DeleteDialog);\r\n","import { Box, Container, Link, Typography, styled } from '@mui/material';\r\n\r\nconst FooterWrapper = styled(Container)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(4)};\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper className=\"footer-wrapper\">\r\n      <Box\r\n        pb={4}\r\n        display={{ xs: 'block', md: 'flex' }}\r\n        alignItems=\"center\"\r\n        textAlign={{ xs: 'center', md: 'left' }}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Box>\r\n          <Typography variant=\"subtitle1\">\r\n            &copy; 2022 - Tokyo Free White React Typescript Admin Dashboard\r\n          </Typography>\r\n        </Box>\r\n        <Typography\r\n          sx={{\r\n            pt: { xs: 2, md: 0 }\r\n          }}\r\n          variant=\"subtitle1\"\r\n        >\r\n          Crafted by{' '}\r\n          <Link\r\n            href=\"https://bloomui.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            BloomUI.com\r\n          </Link>\r\n        </Typography>\r\n      </Box>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","const NEWS_URL = `${process.env.REACT_APP_API_END_POINT}/news/articles/`;\r\nconst CATEGORIES_URL = `${process.env.REACT_APP_API_END_POINT}/categories`;\r\nconst ARTICLE_CATEGORY = `${process.env.REACT_APP_API_END_POINT}/article_category`;\r\nconst COURSE_URL = `${process.env.REACT_APP_API_END_POINT}/courses/`;\r\nconst SECTION_URL = `${process.env.REACT_APP_API_END_POINT}/section/`;\r\nconst LECTURE_URL = `${process.env.REACT_APP_API_END_POINT}/post/`;\r\n\r\nexport {\r\n  NEWS_URL,\r\n  CATEGORIES_URL,\r\n  ARTICLE_CATEGORY,\r\n  COURSE_URL,\r\n  SECTION_URL,\r\n  LECTURE_URL\r\n};\r\n","import { Typography, Button, Grid } from '@mui/material';\r\n\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\n\r\nfunction PageHeader({ handleClickOpenDialog }) {\r\n  const user = {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg'\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Transactions\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\">\r\n          {user.name}, manage your section\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button\r\n          sx={{ mt: { xs: 2, md: 0 } }}\r\n          variant=\"contained\"\r\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\r\n          onClick={handleClickOpenDialog}\r\n        >\r\n          Create New Session\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import { Box, IconButton, Tooltip } from '@mui/material';\r\nimport { Delete, Edit, Preview } from '@mui/icons-material';\r\nimport { deleteBlog } from 'src/services/BlogService';\r\nimport { NEWS_URL } from 'src/constants/url';\r\nimport { mutate } from 'swr';\r\nimport { useState, lazy } from 'react';\r\nimport DeleteDialog from '../DeleteDialog';\r\nimport { NavigateFunction, useNavigate } from 'react-router';\r\n\r\nconst EditSectionForm = lazy(() => import('src/components/EditSectionForm'));\r\n\r\nconst ActiveSectionTable = ({ params, rowId, setRowId }) => {\r\n  const [isOpenUpdateModal, setIsOpenUpdateModal] = useState(false);\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const [id, setId] = useState<number>();\r\n  const navigate: NavigateFunction = useNavigate();\r\n  const handleOpenUpdateModal = () => {\r\n    setIsOpenUpdateModal(true);\r\n    setId(params.id);\r\n  };\r\n\r\n  const handelDeleteBlog = async (params) => {\r\n    await deleteBlog(params.id);\r\n    await mutate(NEWS_URL);\r\n  };\r\n  const handleCloseDeleteDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n  const handleDeleteBlog = () => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Tooltip title=\"View sections lecture\">\r\n          <IconButton\r\n            onClick={() =>\r\n              navigate(`/management/section/${params.id}/lectures`)\r\n            }\r\n          >\r\n            <Preview />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Edit this course\">\r\n          <IconButton onClick={handleOpenUpdateModal}>\r\n            <Edit />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title=\"Delete this course\">\r\n          <IconButton onClick={() => handelDeleteBlog(params)}>\r\n            <Delete />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n      <EditSectionForm\r\n        id={id}\r\n        open={isOpenUpdateModal}\r\n        setIsOpenUpdateModal={setIsOpenUpdateModal}\r\n      />\r\n      <DeleteDialog\r\n        open={openDeleteDialog}\r\n        name=\"blog\"\r\n        handleClose={handleCloseDeleteDialog}\r\n        handleDelete={handleDeleteBlog}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ActiveSectionTable;\r\n","import React, { useMemo, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\r\nimport { grey } from '@mui/material/colors';\r\nimport ActiveSectionTable from 'src/components/ActionSectionTable';\r\n\r\nconst SectionsTable = ({ sections }) => {\r\n  const [pageSize, setPageSize] = useState(sections.pageSize);\r\n  const [rowId, setRowId] = useState(null);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      { field: 'id', headerName: 'Id', width: 220 },\r\n      { field: 'title', headerName: 'Title', width: 170 },\r\n      { field: 'summary', headerName: 'Summary', width: 500 },\r\n\r\n      {\r\n        field: 'actions',\r\n        headerName: 'Actions',\r\n        type: 'actions',\r\n        renderCell: (params) => (\r\n          <ActiveSectionTable {...{ params, rowId, setRowId }} />\r\n        )\r\n      }\r\n    ],\r\n    [rowId]\r\n  );\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 600,\r\n        width: '100%',\r\n        pb: 5\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h3\"\r\n        component=\"h3\"\r\n        sx={{ textAlign: 'center', mt: 3, mb: 3 }}\r\n      >\r\n        Manage Sections\r\n      </Typography>\r\n      <DataGrid\r\n        columns={columns}\r\n        rows={sections.results}\r\n        getRowId={(row) => row.id}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        pageSize={pageSize}\r\n        onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n        getRowSpacing={(params) => ({\r\n          top: params.isFirstVisible ? 0 : 5,\r\n          bottom: params.isLastVisible ? 0 : 5\r\n        })}\r\n        sx={{\r\n          [`& .${gridClasses.row}`]: {\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === 'light' ? grey[200] : grey[900]\r\n          }\r\n        }}\r\n        onCellEditCommit={(params) => setRowId(params.id)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SectionsTable;\r\n","import { useParams } from 'react-router';\r\nimport React, {\r\n  lazy,\r\n  useEffect,\r\n  useState,\r\n  useContext,\r\n  ChangeEvent\r\n} from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageHeader from './PageHeader';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport { Grid, Container, CircularProgress } from '@mui/material';\r\nimport Footer from 'src/components/Footer';\r\nimport useSWR, { mutate } from 'swr';\r\nimport { ICategory } from 'src/components/EditBlogForm';\r\nimport { ARTICLE_CATEGORY, COURSE_URL, SECTION_URL } from 'src/constants/url';\r\nimport { getData } from 'src/helpers/apiHandle';\r\n\r\n//context\r\nimport { ERROR_ACTION } from 'src/reduces/ErrorsReducer';\r\nimport { AppContext } from 'src/AppProvider';\r\nimport { AppContextType } from 'src/interfaces/AppContextType';\r\nimport { SUCCESS_ACTION } from 'src/reduces/SuccessReducer';\r\nimport { createSection } from 'src/services/SessionService';\r\nimport SectionsTable from './SectionsTable';\r\n\r\nexport interface ISection {\r\n  id: number;\r\n  summary: string;\r\n  title: string;\r\n}\r\n\r\nexport interface ISections {\r\n  results: [ISection];\r\n}\r\n\r\nconst CreateSectionForm = lazy(\r\n  () => import('src/components/CreateSectionForm')\r\n);\r\n\r\nconst Sections = () => {\r\n  const { id } = useParams() as { id: string };\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [requesting, setRequesting] = useState<boolean>(false);\r\n  const [title, setTitle] = useState('');\r\n  const [summary, setSummary] = useState('');\r\n\r\n  // context\r\n  const appContext = useContext(AppContext) as AppContextType;\r\n  const { errorsReducer, successReducer } = appContext;\r\n  const [errors, errorDispatch] = errorsReducer;\r\n  const [success, successDispatch] = successReducer;\r\n\r\n  // fetch data\r\n  const { data: sections } = useSWR<ISections>(SECTION_URL, getData);\r\n\r\n  // dialog create\r\n  const handleClickOpenDialog = () => {\r\n    setOpenDialog(true);\r\n  };\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const handleCreateSession = async (\r\n    event: React.FormEvent<HTMLFormElement>\r\n  ) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = {\r\n        title: title,\r\n        summary: summary,\r\n        newsId: +id\r\n      };\r\n\r\n      await createSection(data);\r\n      successDispatch({\r\n        type: SUCCESS_ACTION.SET_SUCCESS,\r\n        success: 'Edit Section Success'\r\n      });\r\n      await mutate(SECTION_URL);\r\n      setOpenDialog(false);\r\n      setSummary('');\r\n      setTitle('');\r\n    } catch (error) {\r\n      errorDispatch({\r\n        type: ERROR_ACTION.SET_ERROR,\r\n        error: error.response.data.message\r\n      });\r\n      setRequesting(false);\r\n    }\r\n  };\r\n\r\n  if (!sections) return <CircularProgress />;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>Section - Manager</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader handleClickOpenDialog={handleClickOpenDialog} />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            {!sections ? (\r\n              <CircularProgress />\r\n            ) : (\r\n              <SectionsTable sections={sections} />\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n\r\n      <CreateSectionForm\r\n        open={openDialog}\r\n        handleClose={handleCloseDialog}\r\n        setTitle={setTitle}\r\n        setSummary={setSummary}\r\n        title={title}\r\n        summary={summary}\r\n        requesting={requesting}\r\n        handleCreateSession={handleCreateSession}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sections;\r\n","import axios from 'axios';\r\n\r\n// Get data form server\r\nexport const getData = async <T>(url: string): Promise<T> => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n  const res = await axios.get<T>(url, { headers: { Authorization: token } });\r\n  return res.data;\r\n};\r\n\r\nexport const multiFetcher = async (...urlArr: string[]) =>\r\n  Promise.allSettled(urlArr.map((url) => getData(url)));\r\n","import axios from 'axios';\r\n\r\nexport const createBlog = (data) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'post',\r\n    url: '/news/articles',\r\n    data: data,\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateBlog = (data, id) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'put',\r\n    url: `/news/articles/${id}`,\r\n    data: data,\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteBlog = (id) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'delete',\r\n    url: `/news/articles/${id}`,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n","import axios from 'axios';\r\n\r\nexport const createSection = (data) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'post',\r\n    url: '/section',\r\n    data: data,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const updateSection = (data, id) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'put',\r\n    url: `/section/${id}`,\r\n    data: data,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.89-2-2-2zm0 16H5V7h14v12zm-5.5-6c0 .83-.67 1.5-1.5 1.5s-1.5-.67-1.5-1.5.67-1.5 1.5-1.5 1.5.67 1.5 1.5zM12 9c-2.73 0-5.06 1.66-6 4 .94 2.34 3.27 4 6 4s5.06-1.66 6-4c-.94-2.34-3.27-4-6-4zm0 6.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z\"\n}), 'Preview');"],"names":["DeleteDialog","open","name","handleClose","handleDelete","onClose","style","cursor","id","autoFocus","onClick","React","FooterWrapper","styled","Container","theme","spacing","className","pb","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","PageTitle","Box","children","maxWidth","NEWS_URL","process","ARTICLE_CATEGORY","COURSE_URL","SECTION_URL","LECTURE_URL","handleClickOpenDialog","Grid","container","item","Typography","component","gutterBottom","Button","mt","startIcon","AddTwoTone","fontSize","EditSectionForm","lazy","params","rowId","setRowId","useState","isOpenUpdateModal","setIsOpenUpdateModal","openDeleteDialog","setOpenDeleteDialog","setId","navigate","useNavigate","handelDeleteBlog","deleteBlog","mutate","Tooltip","title","IconButton","Preview","Edit","Delete","sections","pageSize","setPageSize","columns","useMemo","field","headerName","width","type","renderCell","height","mb","DataGrid","rows","results","getRowId","row","rowsPerPageOptions","onPageSizeChange","newPageSize","getRowSpacing","top","isFirstVisible","bottom","isLastVisible","gridClasses","bgcolor","palette","mode","grey","onCellEditCommit","CreateSectionForm","useParams","openDialog","setOpenDialog","requesting","setRequesting","setTitle","summary","setSummary","appContext","useContext","AppContext","errorsReducer","successReducer","errorDispatch","successDispatch","useSWR","getData","data","handleCreateSession","event","preventDefault","newsId","createSection","SUCCESS_ACTION","success","ERROR_ACTION","error","response","message","PageTitleWrapper","direction","CircularProgress","Footer","url","token","JSON","parse","localStorage","getItem","axios","headers","Authorization","res","multiFetcher","urlArr","Promise","allSettled","map","createBlog","method","updateBlog","updateSection","createSvgIcon","_jsx","d"],"sourceRoot":""}