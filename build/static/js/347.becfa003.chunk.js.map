{"version":3,"file":"static/js/347.becfa003.chunk.js","mappings":"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","sources":["components/PageTitleWrapper/index.tsx","content/applications/FAQs/PageHeader.tsx","content/applications/FAQs/FaqTable.tsx","content/applications/FAQs/index.tsx","services/FaqService.ts"],"sourcesContent":["import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","import { Typography, Button, Grid } from '@mui/material';\r\n\r\nimport AddTwoToneIcon from '@mui/icons-material/AddTwoTone';\r\n\r\nfunction PageHeader() {\r\n  const user = {\r\n    name: 'Catherine Pike',\r\n    avatar: '/static/images/avatars/1.jpg'\r\n  };\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          FAQs\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item>\r\n        {/* <Button\r\n          sx={{ mt: { xs: 2, md: 0 } }}\r\n          variant=\"contained\"\r\n          startIcon={<AddTwoToneIcon fontSize=\"small\" />}\r\n        >\r\n          Create transaction\r\n        </Button> */}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import { FC, ChangeEvent, useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport numeral from 'numeral';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Tooltip,\r\n  Divider,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  Card,\r\n  Checkbox,\r\n  IconButton,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableContainer,\r\n  Select,\r\n  MenuItem,\r\n  Typography,\r\n  useTheme,\r\n  CardHeader\r\n} from '@mui/material';\r\n\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport EditTwoToneIcon from '@mui/icons-material/EditTwoTone';\r\nimport DeleteTwoToneIcon from '@mui/icons-material/DeleteTwoTone';\r\nimport { Faq } from 'src/interfaces/Faq.interface';\r\nimport FaqDetail from '../FAQ_Detail';\r\n\r\ninterface ListFaqProps {\r\n  className?: string;\r\n  listFaq: Faq[];\r\n  faqs: any;\r\n  fetchData: any;\r\n}\r\n\r\nconst RecentOrdersTable: FC<ListFaqProps> = ({ listFaq, faqs, fetchData  }) => {\r\n  const [page, setPage] = useState<number>(faqs.currentPage);\r\n  const [limit, setLimit] = useState<number>(20);\r\n\r\n  const handlePageChange = (event: any, newPage: number): void => {\r\n    setPage(newPage);\r\n    fetchData(newPage);\r\n  };\r\n\r\n  const handleLimitChange = (event: ChangeEvent<HTMLInputElement>): void => {\r\n    setLimit(parseInt(event.target.value));\r\n  };\r\n\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Recent FAQs\"\r\n      />\r\n      <Divider />\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Title</TableCell>\r\n              <TableCell>Content</TableCell>\r\n              <TableCell>Type</TableCell>\r\n              <TableCell>Image 1</TableCell>\r\n              <TableCell>Image 2</TableCell>\r\n              <TableCell>Created</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {listFaq.map((faq) => {\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  key={faq.id}\r\n                >\r\n                  <TableCell>\r\n                    <Typography variant=\"body1\" color=\"text.primary\" fontWeight=\"bold\" noWrap>\r\n                      {faq.title}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {faq.content}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {faq.type}\r\n                    </Typography>\r\n                    \r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      height=\"194\"\r\n                      crossOrigin='anonymous'\r\n                      image={process.env.REACT_APP_API_BACK_END + faq.imgUrl1.replace(\"public/\", \"\")}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                  <CardMedia\r\n                      component=\"img\"\r\n                      height=\"194\"\r\n                      crossOrigin='anonymous'\r\n                      image={process.env.REACT_APP_API_BACK_END + faq.imgUrl2.replace(\"public/\", \"\")}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      fontWeight=\"bold\"\r\n                      color=\"text.primary\"\r\n                      gutterBottom\r\n                      noWrap\r\n                    >\r\n                      {format(Date.parse(faq.created), 'MM-dd-yyyy')}\r\n                    </Typography>\r\n                    \r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <Tooltip title=\"Detail Faq\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': {\r\n                            background: theme.colors.primary.lighter\r\n                          },\r\n                          color: theme.palette.primary.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                        component={Link}\r\n                        to={'detail/'+faq.id}\r\n                      >\r\n                        <EditTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    {/* <Tooltip title=\"Delete Order\" arrow>\r\n                      <IconButton\r\n                        sx={{\r\n                          '&:hover': { background: theme.colors.error.lighter },\r\n                          color: theme.palette.error.main\r\n                        }}\r\n                        color=\"inherit\"\r\n                        size=\"small\"\r\n                      >\r\n                        <DeleteTwoToneIcon fontSize=\"small\" />\r\n                      </IconButton>\r\n                    </Tooltip> */}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <Box p={2}>\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={faqs.total}\r\n          onPageChange={handlePageChange}\r\n          onRowsPerPageChange={handleLimitChange}\r\n          page={faqs.currentPage}\r\n          rowsPerPage={limit}\r\n          rowsPerPageOptions={[5, 10, 25, 30]}\r\n        />\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRecentOrdersTable.propTypes = {\r\n  listFaq: PropTypes.array.isRequired\r\n};\r\n\r\nRecentOrdersTable.defaultProps = {\r\n  listFaq: []\r\n};\r\n\r\nexport default RecentOrdersTable;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Grid, Container, Card } from '@mui/material';\r\nimport RecentOrders from './FaqTable';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport PageHeader from './PageHeader';\r\nimport { getFaqs } from 'src/services/FaqService';\r\nimport RecentOrdersTable from './FaqTable';\r\n\r\nexport default function BasicTable() {\r\n  const [faqs, setFaqs] = useState({});\r\n  const [listFaq, setListFaq] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchData(0);\r\n  }, []);\r\n\r\n  const fetchData = (page) => {\r\n    getFaqs(page).then((response) => {\r\n      setListFaq(response.data.results);\r\n      setFaqs(response.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>FAQs</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <RecentOrdersTable listFaq={listFaq} faqs={faqs} fetchData ={fetchData}/>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\n\r\nexport const getFaqs = (page: number) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'get',\r\n    url: 'faq?page=' + page,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const getFaqDetail = (faqId: string) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'get',\r\n    url: `faq/detail/${faqId}`,\r\n    headers: {\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n\r\nexport const createFaq = (faqId: string, faqObj: any) => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n\r\n  return axios({\r\n    method: 'post',\r\n    url: `faq/conversation/${faqId}`,\r\n    data: faqObj,\r\n    headers: {\r\n      ContentType: 'multipart/form-data',\r\n      Authorization: `Bearer ${token}`\r\n    }\r\n  });\r\n};\r\n"],"names":["PageTitle","styled","Box","theme","spacing","children","className","maxWidth","Grid","container","justifyContent","alignItems","item","Typography","variant","component","gutterBottom","RecentOrdersTable","listFaq","faqs","fetchData","useState","currentPage","setPage","limit","setLimit","useTheme","Card","CardHeader","title","Divider","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","map","faq","hover","color","fontWeight","noWrap","content","type","CardMedia","height","crossOrigin","image","process","imgUrl1","replace","imgUrl2","format","Date","parse","created","Tooltip","arrow","IconButton","sx","background","colors","primary","lighter","palette","main","size","Link","to","id","EditTwoTone","fontSize","p","TablePagination","count","total","onPageChange","event","newPage","onRowsPerPageChange","parseInt","target","value","page","rowsPerPage","rowsPerPageOptions","defaultProps","BasicTable","setFaqs","setListFaq","useEffect","getFaqs","then","response","data","results","PageTitleWrapper","Container","direction","xs","token","JSON","localStorage","getItem","axios","method","url","headers","Authorization","getFaqDetail","faqId","createFaq","faqObj","ContentType"],"sourceRoot":""}