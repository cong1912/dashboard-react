{"version":3,"file":"static/js/290.a97ab3fb.chunk.js","mappings":"4OAEMA,GAAgBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EACpB,gBAAGE,EAAH,EAAGA,MAAH,sCACoBA,EAAMC,QAAQ,GADlC,UAwCF,IAnCA,WACE,OACE,SAACJ,EAAD,CAAeK,UAAU,iBAAzB,UACE,UAAC,IAAD,CACEC,GAAI,EACJC,QAAS,CAAEC,GAAI,QAASC,GAAI,QAC5BC,WAAW,SACXC,UAAW,CAAEH,GAAI,SAAUC,GAAI,QAC/BG,eAAe,gBALjB,WAOE,SAAC,IAAD,WACE,SAAC,IAAD,CAAYC,QAAQ,YAApB,8EAIF,UAAC,IAAD,CACEC,GAAI,CACFC,GAAI,CAAEP,GAAI,EAAGC,GAAI,IAEnBI,QAAQ,YAJV,uBAMa,KACX,SAAC,IAAD,CACEG,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAHN,mC,sEC1BJC,GAAYlB,EAAAA,EAAAA,IAAOmB,EAAAA,EAAPnB,EAChB,gBAAGE,EAAH,EAAGA,MAAH,mCACiBA,EAAMC,QAAQ,GAD/B,UAqBF,IAZoD,SAAC,GAAkB,IAAhBiB,EAAe,EAAfA,SACrD,OACE,SAACF,EAAD,CAAWd,UAAU,uBAArB,UACE,SAAC,IAAD,CAAWiB,SAAS,KAApB,SAA0BD,Q,uPCjBhC,IAAME,EAAQ,UAAMC,qCAAN,kBACRC,EAAc,UAAMD,qCAAN,eACdE,EAAgB,UAAMF,qCAAN,sBAChBG,EAAU,UAAMH,qCAAN,YACVI,EAAW,UAAMJ,qCAAN,YACXK,EAAW,UAAML,qCAAN,SACXM,EAAY,UAAMN,qCAAN,aACZO,EAAe,UAAMP,qCAAN,eACfQ,EAAS,UAAMR,qCAAN,W,6HCMf,MAZA,WACE,OACE,SAACS,EAAA,GAAD,CAAMC,WAAS,EAACtB,eAAe,gBAAgBF,WAAW,SAA1D,UACE,SAACuB,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAACC,EAAA,EAAD,CAAYvB,QAAQ,KAAKwB,UAAU,KAAKC,cAAY,EAApD,uD,wJCgFR,EA/EkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,GAAgCC,EAAAA,EAAAA,YAAhC,eAAOC,EAAP,KACA,GADA,MAC0BD,EAAAA,EAAAA,UAAS,OAAnC,eAAOE,EAAP,KAAcC,EAAd,KACMC,GAAUC,EAAAA,EAAAA,UACd,iBAAM,CACJ,CAAEC,MAAO,QAASC,WAAY,QAASC,MAAO,KAC9C,CACEF,MAAO,WACPC,WAAY,SACZC,MAAO,IACPC,WAAY,SAACC,GACX,OACE,SAACd,EAAA,EAAD,UAC0B,MAAvBc,EAAOC,IAAIC,SAAmB,UAAYF,EAAOC,IAAIC,aAK9D,CACEN,MAAO,SACPC,WAAY,SACZC,MAAO,IACPC,WAAY,SAACC,GACX,OACE,SAACG,EAAA,EAAD,CACEC,IACsB,MAApBJ,EAAOC,IAAII,MACP,oBACAL,EAAOC,IAAII,SAKvBC,UAAU,EACVC,YAAY,GAEd,CAAEX,MAAO,SAAUC,WAAY,SAAUC,MAAO,QAElD,CAACN,IAGH,OACE,UAACtB,EAAA,EAAD,CACEN,GAAI,CACF4C,OAAQ,IACRV,MAAO,OACP1C,GAAI,GAJR,WAOE,SAAC8B,EAAA,EAAD,CACEvB,QAAQ,KACRwB,UAAU,KACVvB,GAAI,CAAEH,UAAW,SAAUgD,GAAI,EAAGC,GAAI,GAHxC,mDAOA,SAACC,EAAA,EAAD,CACEjB,QAASA,EACTkB,KAAMvB,EAAMwB,QACZC,SAAU,SAACb,GAAD,OAASA,EAAIc,IACvBC,mBAAoB,CAAC,EAAG,GAAI,IAC5BzB,SAAUA,EAEV0B,cAAe,SAACjB,GAAD,MAAa,CAC1BkB,IAAKlB,EAAOmB,eAAiB,EAAI,EACjCC,OAAQpB,EAAOqB,cAAgB,EAAI,IAErCzD,IAAE,uBACO0D,EAAAA,EAAAA,KAAoB,CACzBC,QAAS,SAACtE,GAAD,MACgB,UAAvBA,EAAMuE,QAAQC,KAAmBC,EAAAA,EAAAA,KAAYA,EAAAA,EAAAA,QAGnDC,iBAAkB,SAAC3B,GAAD,OAAYP,EAASO,EAAOe,WCrCtD,EA/Bc,WAEZ,IAAc1B,GAAUuC,EAAAA,EAAAA,IAAc9C,EAAAA,GAAW+C,EAAAA,GAAzCC,KAER,OAAKzC,GAEH,iCACE,SAAC,KAAD,WACE,iDAEF,SAAC0C,EAAA,EAAD,WACE,SAAC,EAAD,OAEF,SAAC/E,EAAA,EAAD,CAAWoB,SAAS,KAApB,UACE,SAACW,EAAA,GAAD,CACEC,WAAS,EACTgD,UAAU,MACVtE,eAAe,SACfF,WAAW,UACXN,QAAS,EALX,UAOE,SAAC6B,EAAA,GAAD,CAAME,MAAI,EAAC3B,GAAI,GAAf,SACI+B,GAA+B,SAAC,EAAD,CAAWA,MAAOA,KAAzC,SAAC4C,EAAA,EAAD,WAIhB,SAACC,EAAA,EAAD,QAtBe,SAACD,EAAA,EAAD,M,kHCbRJ,EAAO,yCAAG,WAAUM,GAAV,qFACfC,EAAQC,KAAKC,MAAMC,aAAaC,QAAQ,UAAY,QADrC,SAEHC,EAAAA,EAAAA,IAAaN,EAAK,CAAEO,QAAS,CAAEC,cAAeP,KAF3C,cAEfQ,EAFe,yBAGdA,EAAId,MAHU,2CAAH,sDAMPe,EAAY,yCAAG,wHAAUC,EAAV,yBAAUA,EAAV,iCAC1BC,QAAQC,WAAWF,EAAOG,KAAI,SAACd,GAAD,OAASN,EAAQM,QADrB,2CAAH","sources":["components/Footer/index.tsx","components/PageTitleWrapper/index.tsx","constants/url.ts","content/applications/UserManager/PageHeader.tsx","content/applications/UserManager/UserTable.tsx","content/applications/UserManager/index.tsx","helpers/apiHandle.ts"],"sourcesContent":["import { Box, Container, Link, Typography, styled } from '@mui/material';\r\n\r\nconst FooterWrapper = styled(Container)(\r\n  ({ theme }) => `\r\n        margin-top: ${theme.spacing(4)};\r\n`\r\n);\r\n\r\nfunction Footer() {\r\n  return (\r\n    <FooterWrapper className=\"footer-wrapper\">\r\n      <Box\r\n        pb={4}\r\n        display={{ xs: 'block', md: 'flex' }}\r\n        alignItems=\"center\"\r\n        textAlign={{ xs: 'center', md: 'left' }}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <Box>\r\n          <Typography variant=\"subtitle1\">\r\n            &copy; 2022 - Tokyo Free White React Typescript Admin Dashboard\r\n          </Typography>\r\n        </Box>\r\n        <Typography\r\n          sx={{\r\n            pt: { xs: 2, md: 0 }\r\n          }}\r\n          variant=\"subtitle1\"\r\n        >\r\n          Crafted by{' '}\r\n          <Link\r\n            href=\"https://bloomui.com\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            BloomUI.com\r\n          </Link>\r\n        </Typography>\r\n      </Box>\r\n    </FooterWrapper>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { FC, ReactNode } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Box, Container, styled } from '@mui/material';\r\n\r\nconst PageTitle = styled(Box)(\r\n  ({ theme }) => `\r\n        padding: ${theme.spacing(4)};\r\n`\r\n);\r\n\r\ninterface PageTitleWrapperProps {\r\n  children?: ReactNode;\r\n}\r\n\r\nconst PageTitleWrapper: FC<PageTitleWrapperProps> = ({ children }) => {\r\n  return (\r\n    <PageTitle className=\"MuiPageTitle-wrapper\">\r\n      <Container maxWidth=\"lg\">{children}</Container>\r\n    </PageTitle>\r\n  );\r\n};\r\n\r\nPageTitleWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired\r\n};\r\n\r\nexport default PageTitleWrapper;\r\n","const NEWS_URL = `${process.env.REACT_APP_API_END_POINT}news/articles/`;\r\nconst CATEGORIES_URL = `${process.env.REACT_APP_API_END_POINT}categories/`;\r\nconst ARTICLE_CATEGORY = `${process.env.REACT_APP_API_END_POINT}/article_category/`;\r\nconst COURSE_URL = `${process.env.REACT_APP_API_END_POINT}courses/`;\r\nconst SECTION_URL = `${process.env.REACT_APP_API_END_POINT}section/`;\r\nconst LECTURE_URL = `${process.env.REACT_APP_API_END_POINT}post/`;\r\nconst QUESTION_URL = `${process.env.REACT_APP_API_END_POINT}question/`;\r\nconst QUIZ_ANSWER_URL = `${process.env.REACT_APP_API_END_POINT}quizanswer/`;\r\nconst USERS_URL = `${process.env.REACT_APP_API_END_POINT}users/`;\r\n\r\nexport {\r\n  NEWS_URL,\r\n  CATEGORIES_URL,\r\n  ARTICLE_CATEGORY,\r\n  COURSE_URL,\r\n  SECTION_URL,\r\n  LECTURE_URL,\r\n  QUESTION_URL,\r\n  QUIZ_ANSWER_URL,\r\n  USERS_URL\r\n};\r\n","import { Typography, Grid } from '@mui/material';\r\n\r\nfunction PageHeader() {\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Grid item>\r\n        <Typography variant=\"h3\" component=\"h3\" gutterBottom>\r\n          Danh sách người dùng\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default PageHeader;\r\n","import React, { useState, useMemo } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport { DataGrid, gridClasses } from '@mui/x-data-grid';\r\nimport { grey } from '@mui/material/colors';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nconst UserTable = ({ users }) => {\r\n  const [pageSize, setPageSize] = useState();\r\n  const [rowId, setRowId] = useState(null);\r\n  const columns = useMemo(\r\n    () => [\r\n      { field: 'email', headerName: 'Email', width: 400 },\r\n      {\r\n        field: 'fullName',\r\n        headerName: 'Tên',\r\n        width: 300,\r\n        renderCell: (params) => {\r\n          return (\r\n            <Typography>\r\n              {params.row.fullName == null ? 'Unknown' : params.row.fullName}\r\n            </Typography>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        field: 'avatar',\r\n        headerName: 'AVatar',\r\n        width: 200,\r\n        renderCell: (params) => {\r\n          return (\r\n            <Avatar\r\n              src={\r\n                params.row.image == null\r\n                  ? '/defaulAvatar.png'\r\n                  : params.row.image\r\n              }\r\n            />\r\n          );\r\n        },\r\n        sortable: false,\r\n        filterable: false\r\n      },\r\n      { field: 'amount', headerName: 'Amount', width: 170 }\r\n    ],\r\n    [rowId]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        height: 600,\r\n        width: '100%',\r\n        pb: 5\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"h3\"\r\n        component=\"h3\"\r\n        sx={{ textAlign: 'center', mt: 3, mb: 3 }}\r\n      >\r\n        Danh sách người dùng\r\n      </Typography>\r\n      <DataGrid\r\n        columns={columns}\r\n        rows={users.results}\r\n        getRowId={(row) => row.id}\r\n        rowsPerPageOptions={[5, 10, 20]}\r\n        pageSize={pageSize}\r\n        // onPageSizeChange={(newPageSize) => setPageSize(newPageSize)}\r\n        getRowSpacing={(params) => ({\r\n          top: params.isFirstVisible ? 0 : 5,\r\n          bottom: params.isLastVisible ? 0 : 5\r\n        })}\r\n        sx={{\r\n          [`& .${gridClasses.row}`]: {\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === 'light' ? grey[200] : grey[900]\r\n          }\r\n        }}\r\n        onCellEditCommit={(params) => setRowId(params.id)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport PageHeader from './PageHeader';\r\nimport PageTitleWrapper from 'src/components/PageTitleWrapper';\r\nimport { Grid, Container, CircularProgress } from '@mui/material';\r\nimport Footer from 'src/components/Footer';\r\nimport { getData } from 'src/helpers/apiHandle';\r\nimport { USERS_URL } from 'src/constants/url';\r\nimport useSWR from 'swr';\r\nimport { Users } from 'src/interfaces/User';\r\nimport UserTable from './UserTable';\r\n\r\nconst index = () => {\r\n  // fetch data\r\n  const { data: users } = useSWR<Users>(USERS_URL, getData);\r\n\r\n  if (!users) return <CircularProgress />;\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>User - Manager</title>\r\n      </Helmet>\r\n      <PageTitleWrapper>\r\n        <PageHeader />\r\n      </PageTitleWrapper>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={12}>\r\n            {!users ? <CircularProgress /> : <UserTable users={users} />}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default index;\r\n","import axios from 'axios';\r\n\r\n// Get data form server\r\nexport const getData = async <T>(url: string): Promise<T> => {\r\n  const token = JSON.parse(localStorage.getItem('token') || 'null');\r\n  const res = await axios.get<T>(url, { headers: { Authorization: token } });\r\n  return res.data;\r\n};\r\n\r\nexport const multiFetcher = async (...urlArr: string[]) =>\r\n  Promise.allSettled(urlArr.map((url) => getData(url)));\r\n"],"names":["FooterWrapper","styled","Container","theme","spacing","className","pb","display","xs","md","alignItems","textAlign","justifyContent","variant","sx","pt","href","target","rel","PageTitle","Box","children","maxWidth","NEWS_URL","process","CATEGORIES_URL","ARTICLE_CATEGORY","COURSE_URL","SECTION_URL","LECTURE_URL","QUESTION_URL","QUIZ_ANSWER_URL","USERS_URL","Grid","container","item","Typography","component","gutterBottom","users","useState","pageSize","rowId","setRowId","columns","useMemo","field","headerName","width","renderCell","params","row","fullName","Avatar","src","image","sortable","filterable","height","mt","mb","DataGrid","rows","results","getRowId","id","rowsPerPageOptions","getRowSpacing","top","isFirstVisible","bottom","isLastVisible","gridClasses","bgcolor","palette","mode","grey","onCellEditCommit","useSWR","getData","data","PageTitleWrapper","direction","CircularProgress","Footer","url","token","JSON","parse","localStorage","getItem","axios","headers","Authorization","res","multiFetcher","urlArr","Promise","allSettled","map"],"sourceRoot":""}