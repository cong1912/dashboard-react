{"version":3,"file":"static/js/441.2ee16d09.chunk.js","mappings":"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","sources":["components/EditLectureForm/index.tsx","components/Timymce/index.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Grid, TextField, Theme, Button } from '@mui/material';\r\nimport { makeStyles } from '@mui/styles';\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle\r\n} from '@material-ui/core';\r\nimport { updateLecture } from 'src/services/LecturesService';\r\n\r\n//context\r\nimport { ERROR_ACTION } from 'src/reduces/ErrorsReducer';\r\nimport { AppContext } from 'src/AppProvider';\r\nimport { AppContextType } from 'src/interfaces/AppContextType';\r\nimport { SUCCESS_ACTION } from 'src/reduces/SuccessReducer';\r\nimport { LECTURE_URL } from 'src/constants/url';\r\nimport useSWR, { mutate } from 'swr';\r\nimport { getData } from 'src/helpers/apiHandle';\r\nimport { ILecture } from 'src/content/applications/Lectures';\r\n\r\nimport Timymce from '../Timymce';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    '& .MuiFormControl-root': {\r\n      width: '100%'\r\n    },\r\n    '& .ql-container': {\r\n      height: 200\r\n    }\r\n  }\r\n}));\r\n\r\nconst CreateLectureForm = ({ open, setIsOpenUpdateModal, id, sectionId }) => {\r\n  const classes = useStyles();\r\n  const [requesting, setRequesting] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [order, setOrder] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  // context\r\n  const appContext = useContext(AppContext) as AppContextType;\r\n  const { errorsReducer, successReducer } = appContext;\r\n  const [errors, errorDispatch] = errorsReducer;\r\n  const [success, successDispatch] = successReducer;\r\n\r\n  //fetch data\r\n  const { data: lecture } = useSWR<ILecture>(\r\n    id ? LECTURE_URL + id : null,\r\n    getData\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!id || !lecture) {\r\n      return;\r\n    } else {\r\n      setContent(lecture.content);\r\n      setName(lecture.name);\r\n      setPrice(lecture.price);\r\n      setOrder(lecture.order);\r\n    }\r\n  }, [lecture, id]);\r\n\r\n  const handleEditLecture = async (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    try {\r\n      const data = {\r\n        name: name,\r\n        content: content,\r\n        newsId: +sectionId,\r\n        price: +price,\r\n        order: +order\r\n      };\r\n\r\n      await updateLecture(data, id);\r\n      successDispatch({\r\n        type: SUCCESS_ACTION.SET_SUCCESS,\r\n        success: 'Create Lecture Success'\r\n      });\r\n      await mutate(LECTURE_URL + `?newsId=${sectionId}`);\r\n      setIsOpenUpdateModal(false);\r\n    } catch (error) {\r\n      errorDispatch({\r\n        type: ERROR_ACTION.SET_ERROR,\r\n        error: error.response.data.message\r\n      });\r\n      setRequesting(false);\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpenUpdateModal(false);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={handleClose} maxWidth=\"xl\">\r\n      <DialogTitle>Chỉnh sửa bài học</DialogTitle>\r\n      <form className={classes.root} onSubmit={handleEditLecture}>\r\n        <DialogContent>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"name\"\r\n                name=\"name\"\r\n                onChange={(e) => {\r\n                  setName(e.target.value);\r\n                }}\r\n                value={name}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Price\"\r\n                name=\"price\"\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setPrice(e.target.value);\r\n                }}\r\n                value={price}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                label=\"Order\"\r\n                name=\"order\"\r\n                type=\"number\"\r\n                onChange={(e) => {\r\n                  setOrder(e.target.value);\r\n                }}\r\n                value={order}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Timymce handleChangeContent={setContent} content={content} />\r\n            </Grid>\r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"large\"\r\n            type=\"submit\"\r\n            disabled={requesting}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateLectureForm;\r\n","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\nconst Timymce = ({ handleChangeContent, content }) => {\r\n  const editorRef = useRef(null);\r\n\r\n  const onChange = (e) => {\r\n    handleChangeContent(e.target.getContent());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Editor\r\n        apiKey=\"4wvwhb18asy172qnsxv6g879f5er5mcoowyg3gygvys2lm9x\"\r\n        onInit={(evt, editor) => (editorRef.current = editor)}\r\n        initialValue={content}\r\n        init={{\r\n          height: 500,\r\n          plugins:\r\n            'print preview powerpaste casechange importcss tinydrive searchreplace autolink autosave save directionality advcode visualblocks visualchars fullscreen image link media mediaembed template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists checklist wordcount tinymcespellchecker a11ychecker textpattern noneditable help formatpainter pageembed charmap mentions quickbars linkchecker emoticons advtable',\r\n          toolbar:\r\n            'undo redo | formatselect | ' +\r\n            'bold italic backcolor | alignleft aligncenter ' +\r\n            'alignright alignjustify | bullist numlist outdent indent | ' +\r\n            'removeformat | help',\r\n          content_style:\r\n            'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n        }}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Timymce;\r\n"],"names":["useStyles","makeStyles","theme","root","width","height","open","setIsOpenUpdateModal","id","sectionId","classes","useState","requesting","setRequesting","name","setName","price","setPrice","order","setOrder","content","setContent","appContext","useContext","AppContext","errorsReducer","successReducer","errorDispatch","successDispatch","lecture","useSWR","LECTURE_URL","getData","data","useEffect","handleEditLecture","event","preventDefault","newsId","updateLecture","type","SUCCESS_ACTION","success","mutate","ERROR_ACTION","error","response","message","handleClose","onClose","maxWidth","className","onSubmit","container","spacing","item","xs","variant","label","onChange","e","target","value","handleChangeContent","color","size","disabled","onClick","editorRef","useRef","apiKey","onInit","evt","editor","current","initialValue","init","plugins","toolbar","content_style","getContent"],"sourceRoot":""}